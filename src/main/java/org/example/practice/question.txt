𝗔𝗿𝗿𝗮𝘆𝘀 𝗮𝗻𝗱 𝗦𝘁𝗿𝗶𝗻𝗴𝘀:
1. Given an array of integers, find all unique triplets in the array which gives the sum of zero.
2. Implement an algorithm to find the longest substring without repeating characters.
3. Rotate an image represented by an NxN matrix.
4. Given a string, find the longest palindromic substring.
5. Implement an algorithm to find the minimum window in a string which contains all the characters of another string.
6. Given an array of integers, return indices of the two numbers such that they add up to a specific target.
7. Implement an algorithm to find the contiguous subarray with the largest sum.
8. Design a data structure that supports all following operations in average O(1) time: insert, delete, getRandom.

𝗟𝗶𝗻𝗸𝗲𝗱 𝗟𝗶𝘀𝘁𝘀:
9. Merge K sorted linked lists and return it as one sorted list.
10. Implement an algorithm to find the node at which the intersection of two singly linked lists begins.
11. Given a linked list, swap every two adjacent nodes and return its head.
12. Design and implement a data structure for Least Recently Used (LRU) cache.
13. Implement an algorithm to reorder a linked list in-place, such that nodes at even positions come before nodes at odd positions.

𝗧𝗿𝗲𝗲𝘀 𝗮𝗻𝗱 𝗕𝗶𝗻𝗮𝗿𝘆 𝗦𝗲𝗮𝗿𝗰𝗵 𝗧𝗿𝗲𝗲𝘀:
14. Given a binary tree, find the maximum path sum. The path may start and end at any node in the tree.
15. Given a binary search tree (BST), convert it to a greater tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.
16. Serialize and deserialize an N-ary tree.
17. Given a binary tree, flatten it to a linked list in-place.
18. Given a binary tree, return the level order traversal of its nodes' values.

𝗦𝗲𝗮𝗿𝗰𝗵𝗶𝗻𝗴 𝗮𝗻𝗱 𝗦𝗼𝗿𝘁𝗶𝗻𝗴:
19. Given a list of words, group all words that are anagrams of each other.
20. Implement Ternary Search Tree (TST).
21. Given a list of intervals, merge overlapping intervals.
22. Implement an algorithm to sort an array of strings so that all the anagrams are next to each other.
23. Implement an efficient algorithm for finding the kth smallest/largest element in an unsorted array.

𝗗𝘆𝗻𝗮𝗺𝗶𝗰 𝗣𝗿𝗼𝗴𝗿𝗮𝗺𝗺𝗶𝗻𝗴:
24. Given two strings text1 and text2, return the length of their longest common subsequence.
25. Given a string, a partitioning of the string is a palindrome partitioning if every substring of the partition is a palindrome. Find the minimum cuts needed for palindrome partitioning of a given string.
